@using Models.Poker;
@using Models.Poker.Enums

@code {
    [Parameter]
    public Hand PlayerHand { get; set; }

    [Parameter]
    public Hand PlayerTwoHand { get; set; }

    [Parameter]
    public Hand PlayerThreeHand { get; set; }

    [Parameter]
    public Person Player { get; set; }


    public Card HighCardInOwnHand(Hand playerHand)
    {
        if(playerHand.cardsOnPerson[0].Value > playerHand.cardsOnPerson[1].Value)
        {
            return playerHand.cardsOnPerson[0];

        }
        else
        {
            return playerHand.cardsOnPerson[1];
        }
    }

    
    public bool IsTie()
    {
        if(PlayerHand.value == PlayerTwoHand.value && PlayerHand.value == PlayerThreeHand.value){
            return true;
        }
        else
        {
            return false;
        }
    }
}

@if (Player.HasFolded)
{
    <h1 class="display-3" style="color: gray">Fold!</h1>
}
else if (PlayerHand.value > PlayerTwoHand.value && PlayerHand.value > PlayerThreeHand.value)
{
    <h1 class="display-3 text-success">Win!</h1>
}
else if (PlayerHand.value < PlayerTwoHand.value && PlayerHand.value < PlayerThreeHand.value)
{
    <h1 class="display-3 text-danger">Lose...</h1>
}
else if (IsTie())
{
    if(PlayerHand.pairValue > PlayerTwoHand.pairValue && PlayerHand.pairValue > PlayerThreeHand.pairValue)
    {
        <h1 class="display-3 text-success">Win!</h1>
    }
    else
    {
        <h1 class="display-3 text-danger">Lose...</h1>
    }
}
else if (IsTie() && (HighCardInOwnHand(PlayerHand).Value > HighCardInOwnHand(PlayerTwoHand).Value && HighCardInOwnHand(PlayerHand).Value > HighCardInOwnHand(PlayerThreeHand).Value))
{
    <h1 class="display-3 text-success">Win!</h1>
}

else
{
    <h1 class="display-3 text-info">Lose</h1>
}

<h1 class="display-3 text-black-50">@PlayerHand.value</h1>